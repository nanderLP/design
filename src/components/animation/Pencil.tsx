/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.0.9 -t ../../../public/models/pencil.gltf
Author: idyllKingdom (https://sketchfab.com/idyllKingdom)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/pencil-5648ec6fdfc94713b01f49ba5d057a3b
Title: Pencil
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { Color, useFrame } from "@react-three/fiber";
import { useAtomValue } from "jotai";
import { colorAtom } from "../../pages/Animation";

type GLTFResult = GLTF & {
  nodes: {
    pencil_wood_0: THREE.Mesh;
    pencil_lightBrown_0: THREE.Mesh;
    pencil_darkGrey_0: THREE.Mesh;
    pencil_silverMetal_0: THREE.Mesh;
    pencil_pinkEraser_0: THREE.Mesh;
  };
  materials: {
    wood: THREE.MeshStandardMaterial;
    lightBrown: THREE.MeshStandardMaterial;
    darkGrey: THREE.MeshStandardMaterial;
    silverMetal: THREE.MeshStandardMaterial;
    pinkEraser: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const ref = useRef<THREE.Group>(null);
  useFrame(() => [(ref.current!.rotation.y += 0.02)]);

  const color = useAtomValue(colorAtom);

  const { nodes, materials } = useGLTF(
    "/models/pencil.gltf"
  ) as unknown as GLTFResult;
  return (
    <group {...props} ref={ref} dispose={null}>
      <group
        position={[0, 0, 0]}
        rotation={[0, 0, Math.PI * 0.8]}
        scale={[0.11, 0.4, 0.11]}
      >
        <mesh geometry={nodes.pencil_wood_0.geometry}>
          <meshStandardMaterial color={color} />
        </mesh>
        <mesh
          geometry={nodes.pencil_lightBrown_0.geometry}
          material={materials.lightBrown}
        />
        <mesh
          geometry={nodes.pencil_darkGrey_0.geometry}
          material={materials.darkGrey}
        />
        <mesh
          geometry={nodes.pencil_silverMetal_0.geometry}
          material={materials.silverMetal}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/models/pencil.gltf");
